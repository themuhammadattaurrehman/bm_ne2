  [HttpPost("insert")]
public async Task<Response<Doctor>> InsertItem(DoctorRequest doctorRequest)
{
    using var transaction = _db.Database.BeginTransaction();
    try
    {
        User user = new User
        {
            UserType = doctorRequest.UserType,
            FirstName = doctorRequest.FirstName,
            LastName = doctorRequest.LastName,
            FatherHusbandName = doctorRequest.FatherHusbandName,
            Gender = doctorRequest.Gender,
            Cnic = doctorRequest.Cnic,
            Contact = doctorRequest.Contact,
            EmergencyContact = doctorRequest.EmergencyContact,
            Email = doctorRequest.Email,
            Address = doctorRequest.Address,
            JoiningDate = doctorRequest.JoiningDate,
            FloorNo = doctorRequest.FloorNo,
            Experience = doctorRequest.Experience,
            DateOfBirth = doctorRequest.DateOfBirth,
            MaritalStatus = doctorRequest.MaritalStatus,
            Religion = doctorRequest.Religion
        };
        _db.Users.Add(user);

        if (doctorRequest.QualificationList != null && doctorRequest.QualificationList.Count > 0)
        {
            foreach (QualificationRequest qualificationRequest in doctorRequest.QualificationList)
            {
                Qualification qualification = new Qualification
                {
                    UserId = user.Id,
                    Certificate = qualificationRequest.Certificate,
                    Description = qualificationRequest.Description,
                    QualificationType = qualificationRequest.QualificationType
                };
                _db.Qualifications.Add(qualification);
            }
        }

        Doctor doctor = new Doctor
        {
            UserId = user.Id,
            ConsultationFee = doctorRequest.ConsultationFee,
            EmergencyConsultationFee = doctorRequest.EmergencyConsultationFee,
            ShareInFee = doctorRequest.ShareInFee,
            SpecialityType = doctorRequest.SpecialityType
        };
        _db.Doctors.Add(doctor);

        // Save changes once after all entities have been added
        await _db.SaveChangesAsync();

        transaction.Commit();
        return new Response<Doctor>(true, "Success: Inserted data.", doctor);
    }
    catch (DbUpdateException ex)
    {
        // Log the exception details for debugging
        // Log.Error(ex, "Database error while inserting data.");

        transaction.Rollback();
        return new Response<Doctor>(false, $"Database Failure: Unable to insert data. Because {ex.InnerException?.Message ?? ex.Message}", null);
    }
    catch (Exception ex)
    {
        transaction.Rollback();
        return new Response<Doctor>(false, $"Server Failure: Unable to insert data. Because {ex.Message}", null);
    }
}





   // Add qualifications if provided
        // if (doctorRequest.QualificationList != null && doctorRequest.QualificationList.Any())
        // {
        //     foreach (var qualificationRequest in doctorRequest.QualificationList)
        //     {
        //         Qualification qualification = new Qualification
        //         {
        //             UserId = user.Id,
        //             Certificate = qualificationRequest.Certificate,
        //             Description = qualificationRequest.Description,
        //             QualificationType = qualificationRequest.QualificationType
        //         };

        //         await _db.Qualifications.AddAsync(qualification);
        //     }

        //     await _db.SaveChangesAsync();
        // }


// for insert data
{
    "UserType": "Doctor",
    "FirstName": "atta",
    "LastName": "atl",
    "FatherHusbandName": "Michael Doe",
    "Gender": "Male",
    "Cnic": "1234567890123",
    "Contact": "1234567890",
    "EmergencyContact": "0987654321",
    "Email": "john.doe@example.com",
    "Address": "123 Main Street, City",
    "JoiningDate": "2024-03-13",
    "FloorNo": "3",
    "Experience": "5 years",
    "DateOfBirth": "1990-01-01",
    "MaritalStatus": "Single",
    "Religion": "Christian",
    "ConsultationFee": 50,
    "EmergencyConsultationFee": 100,
    "ShareInFee": 20,
    "SpecialityType": "Cardiology",
    "QualificationList": [
        {
            "Certificate": "MBBS",
            "Description": "Bachelor of Medicine, Bachelor of Surgery",
            "QualificationType": "Medical"
        }
    ]
}



.Include(x => x.User.Qualifications)


// data insert for nurse
{
    "UserType": "Nurse",
    "FirstName": "Emma",
    "LastName": "Smith",
    "FatherHusbandName": "David Smith",
    "Gender": "Female",
    "Cnic": "9876543210987",
    "Contact": "2345678901",
    "EmergencyContact": "9876543210",
    "Email": "emma.smith@example.com",
    "Address": "456 Oak Street, Town",
    "JoiningDate": "2023-08-20",
    "FloorNo": "2",
    "Experience": "3 years",
    "DateOfBirth": "1995-05-15",
    "MaritalStatus": "Married",
    "Religion": "Islam",
    "ConsultationFee": 0,
    "EmergencyConsultationFee": 0,
    "ShareInFee": 0,
    "SpecialityType": "General Nursing",
    "QualificationList": [
        {
            "Certificate": "RN",
            "Description": "Registered Nurse",
            "QualificationType": "Nursing"
        },
        {
            "Certificate": "BSN",
            "Description": "Bachelor of Science in Nursing",
            "QualificationType": "Nursing"
        }
    ]
}


//data insert for Patient
{
  "doctorId": 123,
  "receptionistId": 456,
  "userType": "Patient",
  "dateOfBirth": "1985-05-10T10:00:00.000Z",
  "maritalStatus": "Married",
  "religion": "Islam",
  "firstName": "John",
  "lastName": "Doe",
  "fatherHusbandName": "Michael Doe",
  "gender": "Male",
  "cnic": "1234567890123",
  "contact": "9876543210",
  "emergencyContact": "1234567890",
  "email": "john.doe@example.com",
  "address": "456 Maple Street, City",
  "joiningDate": "2024-03-18T10:00:00.000Z",
  "floorNo": 1,
  "experience": "Regular checkups",
  "category": "General",
  "birthPlace": "City",
  "type": "New Patient",
  "externalId": "P123456",
  "bloodGroup": "O+",
  "clinicSite": "Main Clinic",
  "referredBy": "Dr. Smith",
  "referredDate": "2024-03-10T10:00:00.000Z",
  "guardian": "Jane Doe",
  "paymentProfile": "Cash",
  "description": "Routine checkup appointment",
  "appointmentCode": "A123456",
  "consultationDate": "2024-03-18T14:00:00.000Z",
  "appointmentType": "Follow-up"
}
